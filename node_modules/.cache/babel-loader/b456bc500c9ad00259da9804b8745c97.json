{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Axios from \"axios\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.handleFirstNameChange = function (event) {\n      _this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    _this.handleLastNameChange = function (event) {\n      _this.setState({\n        lastName: event.target.value\n      });\n\n      _this.setState({\n        lastNameError: _this.lastName === ''\n      });\n\n      if (_this.state.lastNameError) {\n        alert('last name can\\'t be empty');\n      }\n    };\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.handleValidateEmailChange = function (event) {\n      _this.setState({\n        validateEmail: event.target.value\n      });\n    };\n\n    _this.handlePhoneChange = function (event) {\n      _this.setState({\n        phone: event.target.value\n      });\n    };\n\n    _this.handleZipChange = function (event) {\n      _this.setState({\n        zip: event.target.value\n      });\n    };\n\n    _this.validateFirstName = function () {\n      var firstName = _this.state.firstName;\n\n      _this.setState({\n        firstNameError: firstName.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.validateLastName = function () {\n      _this.setState({\n        lastNameError: _this.lastName === ''\n      });\n\n      if (_this.state.lastNameError) {\n        alert('last name can\\'t be empty');\n      }\n    };\n\n    _this.validateEmail = function () {\n      var email = _this.state.email;\n\n      _this.setState({\n        emailError: email.length > 0 ? null : 'Email must not be empty'\n      });\n    };\n\n    _this.validateValidateEmail = function () {\n      var _this$state = _this.state,\n          validateEmail = _this$state.validateEmail,\n          email = _this$state.email;\n\n      _this.setState({\n        validateEmailError: validateEmail.length > 0 && validateEmail === email ? null : 'Validate email must not be empty'\n      });\n    };\n\n    _this.validatePhone = function () {\n      var phone = _this.state.phone;\n\n      _this.setState({\n        phoneError: phone.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.validateZip = function () {\n      var zip = _this.state.zip;\n\n      _this.setState({\n        zipError: zip.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.invalidSubmission = function () {};\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state2 = _this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          email = _this$state2.email,\n          validateEmail = _this$state2.validateEmail,\n          phone = _this$state2.phone,\n          zip = _this$state2.zip;\n      var phoneClean = phone !== '' ? phone.match(/\\d+/g).map(Number).join('') : ''; // this.lastNameError = lastName === '';\n\n      _this.setState({\n        lastNameError: _this.lastName === ''\n      });\n\n      if (_this.state.lastNameError) {\n        alert('last name can\\'t be empty');\n      }\n\n      var data = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phone: phone,\n        phoneClean: phoneClean,\n        zip: zip // Axios.post('http://localhost:5000/serverport/add', data);\n        // reset the state to empty\n\n      };\n\n      _this.setState(_this.initialState); // if (this.lastName === '') {\n      //   alert ('last name cant be empty')\n      // }\n\n\n      alert(\"Your state values: \\n \\n            firstName: \".concat(firstName, \" \\n \\n            lastName: \").concat(lastName, \" \\n \\n            email: \").concat(email, \" \\n \\n            validateEmail: \").concat(validateEmail, \" \\n \\n            phone: \").concat(phone, \" \\n \\n            phoneClean: \").concat(phoneClean, \" \\n\\n            zip: \").concat(zip, \" \\n\\n            lastNameError: \").concat(_this.lastNameError));\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      validateEmail: '',\n      phone: '',\n      zip: '',\n      firstNameError: '',\n      lastNameError: true,\n      emailError: '',\n      validateEmailError: '',\n      phoneError: '',\n      zipError: ''\n    };\n    var initialState = _this.state;\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var isValidFirstName = this.state.firstName.length > 0;\n      var isValidLastName = this.state.lastName.length > 0;\n      var isValidEmail = this.state.email.length > 0;\n      var isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail;\n      var isValidPhone = this.state.phone.length > 0;\n      var isValidZip = this.state.zip.length > 0;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Register for the CPR Registry\"), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"firstName\",\n        placeholder: \"First Name\",\n        value: this.state.firstName,\n        onChange: this.handleFirstNameChange // className={`form-control ${ isValidFirstName? '':'is-invalid' }`}\n        ,\n        onBlur: this.validateFirstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"lastName\",\n        placeholder: \"Last Name\",\n        value: this.state.lastName // onChange={this.handleLastNameChange}\n        // className={`form-control ${ isValidLastName? '':'is-invalid' }`}\n        // onBlur={this.validateLastName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        // className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        // className = 'input-group'\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.email,\n        onChange: this.handleEmailChange,\n        onBlur: this.validateEmailName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmailConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Confirm email address\"), React.createElement(Form.Control, {\n        // className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        // className = 'input-group'\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.validateEmail,\n        onChange: this.handleValidateEmailChange,\n        onBlur: this.validateValidateEmailName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicPhoneNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Form.Control, {\n        type: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: this.state.phone,\n        onChange: this.handlePhoneChange // className={`form-control ${ isValidPhone? '':'is-invalid' }`}\n        ,\n        onBlur: this.validatePhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicZipCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        type: \"zipCode\",\n        placeholder: \"Zip Code\",\n        value: this.state.zip,\n        onChange: this.handleZipChange // className={`form-control ${ isValidZip? '':'is-invalid' }`}\n        ,\n        onBlur: this.validateZip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["C:\\Users\\jbyrn\\Desktop\\Coding\\react-cpr-registry\\cpr-registry\\src\\containers\\Signup.js"],"names":["React","Component","Form","Button","Row","Col","Axios","Signup","props","handleFirstNameChange","event","setState","firstName","target","value","handleLastNameChange","lastName","lastNameError","state","alert","handleEmailChange","email","handleValidateEmailChange","validateEmail","handlePhoneChange","phone","handleZipChange","zip","validateFirstName","firstNameError","length","validateLastName","emailError","validateValidateEmail","validateEmailError","validatePhone","phoneError","validateZip","zipError","invalidSubmission","handleSubmit","preventDefault","phoneClean","match","map","Number","join","data","initialState","isValidFirstName","isValidLastName","isValidEmail","isValidValidateEmail","isValidPhone","isValidZip","validateEmailName","validateValidateEmailName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport Axios from \"axios\";\r\n\r\nexport default class Signup extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      validateEmail:'',\r\n      phone:'',\r\n      zip:'',\r\n      firstNameError:'',\r\n      lastNameError: true,\r\n      emailError:'',\r\n      validateEmailError:'',\r\n      phoneError:'',\r\n      zipError:''\r\n    }\r\n    let initialState = this.state;\r\n  }\r\n\r\n  handleFirstNameChange = (event) => {\r\n    this.setState({firstName: event.target.value});\r\n  }\r\n\r\n  handleLastNameChange = (event) => {\r\n    this.setState({lastName: event.target.value});\r\n    this.setState({\r\n      lastNameError: this.lastName === ''\r\n    });\r\n    if (this.state.lastNameError) {\r\n      alert('last name can\\'t be empty')\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({email: event.target.value});\r\n  }\r\n\r\n  handleValidateEmailChange = (event) => {\r\n    this.setState({validateEmail: event.target.value});\r\n  }\r\n\r\n  handlePhoneChange = (event) => {\r\n    this.setState({phone: event.target.value});\r\n  }\r\n\r\n  handleZipChange = (event) => {\r\n    this.setState({zip: event.target.value});\r\n  }\r\n\r\n  validateFirstName = () => {\r\n    const { firstName } = this.state;\r\n    this.setState({\r\n      firstNameError:\r\n        firstName.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  validateLastName = () => {\r\n    this.setState({\r\n      lastNameError: this.lastName === ''\r\n    });\r\n    if (this.state.lastNameError) {\r\n      alert('last name can\\'t be empty')\r\n    }\r\n  }\r\n  \r\n  validateEmail = () => {\r\n    const { email } = this.state;\r\n    this.setState({\r\n      emailError:\r\n        email.length > 0 ? null : 'Email must not be empty'\r\n    });\r\n  }\r\n\r\n  validateValidateEmail = () => {\r\n    const { validateEmail, email } = this.state;\r\n    this.setState({\r\n      validateEmailError:\r\n        (validateEmail.length > 0 && validateEmail === email) ? null : 'Validate email must not be empty'\r\n    });\r\n  }\r\n\r\n  validatePhone = () => {\r\n    const { phone } = this.state;\r\n    this.setState({\r\n      phoneError:\r\n        phone.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  validateZip = () => {\r\n    const { zip } = this.state;\r\n    this.setState({\r\n      zipError:\r\n        zip.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  invalidSubmission = () => {\r\n\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, validateEmail, phone, zip } = this.state\r\n    let phoneClean = phone !== '' ? phone.match(/\\d+/g).map(Number).join('') : ''\r\n    // this.lastNameError = lastName === '';\r\n    this.setState({\r\n      lastNameError: this.lastName === ''\r\n    });\r\n    if (this.state.lastNameError) {\r\n      alert('last name can\\'t be empty')\r\n    }\r\n    const data = {firstName: firstName, lastName: lastName, email: email, phone: phone, phoneClean: phoneClean, zip: zip}\r\n    // Axios.post('http://localhost:5000/serverport/add', data);\r\n    // reset the state to empty\r\n    this.setState(this.initialState);\r\n    // if (this.lastName === '') {\r\n    //   alert ('last name cant be empty')\r\n    // }\r\n    alert(`Your state values: \\n \r\n            firstName: ${firstName} \\n \r\n            lastName: ${lastName} \\n \r\n            email: ${email} \\n \r\n            validateEmail: ${validateEmail} \\n \r\n            phone: ${phone} \\n \r\n            phoneClean: ${phoneClean} \\n\r\n            zip: ${zip} \\n\r\n            lastNameError: ${this.lastNameError}`)\r\n  } \r\n\r\n  render() {\r\n    const isValidFirstName = this.state.firstName.length > 0\r\n    const isValidLastName = this.state.lastName.length > 0\r\n    const isValidEmail = this.state.email.length > 0\r\n    const isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail\r\n    const isValidPhone = this.state.phone.length > 0\r\n    const isValidZip = this.state.zip.length > 0\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <p className=\"title\">\r\n          Register for the CPR Registry\r\n        </p>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"firstName\" \r\n                  placeholder=\"First Name\"  \r\n                  value={this.state.firstName} \r\n                  onChange={this.handleFirstNameChange}\r\n                  // className={`form-control ${ isValidFirstName? '':'is-invalid' }`}\r\n                  onBlur={this.validateFirstName} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"lastName\" \r\n                  placeholder=\"Last Name\"  \r\n                  value={this.state.lastName} \r\n                  // onChange={this.handleLastNameChange}\r\n                  // className={`form-control ${ isValidLastName? '':'is-invalid' }`}\r\n                  // onBlur={this.validateLastName} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Form.Group  controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control \r\n              // className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" \r\n              placeholder=\"Enter email\"  \r\n              value={this.state.email} \r\n              onChange={this.handleEmailChange}\r\n              onBlur={this.validateEmailName} />\r\n          </Form.Group>\r\n\r\n          <Form.Group  controlId=\"formBasicEmailConfirm\">\r\n            <Form.Label>Confirm email address</Form.Label>\r\n            <Form.Control \r\n              // className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" placeholder=\"Enter email\"  \r\n              value={this.state.validateEmail} \r\n              onChange={this.handleValidateEmailChange}\r\n              onBlur={this.validateValidateEmailName} />\r\n          </Form.Group>\r\n        </div>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicPhoneNumber\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control \r\n                  type=\"phoneNumber\" \r\n                  placeholder=\"Phone Number\"  \r\n                  value={this.state.phone} \r\n                  onChange={this.handlePhoneChange}\r\n                  // className={`form-control ${ isValidPhone? '':'is-invalid' }`}\r\n                  onBlur={this.validatePhone} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicZipCode\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control \r\n                  type=\"zipCode\" \r\n                  placeholder=\"Zip Code\"  \r\n                  value={this.state.zip} \r\n                  onChange={this.handleZipChange}\r\n                  // className={`form-control ${ isValidZip? '':'is-invalid' }`}\r\n                  onBlur={this.validateZip} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Button variant=\"primary\" type=\"submit\" size=\"lg\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}