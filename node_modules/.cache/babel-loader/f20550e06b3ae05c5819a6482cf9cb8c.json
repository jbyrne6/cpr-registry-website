{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Axios from \"axios\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.resetState = function () {\n      _this.setState(_this.baseState);\n    };\n\n    _this.handleFirstNameChange = function (event) {\n      _this.setState({\n        firstName: event.target.value,\n        firstNameError: event.target.value === ''\n      });\n    };\n\n    _this.handleLastNameChange = function (event) {\n      _this.setState({\n        lastName: event.target.value,\n        lastNameError: event.target.value === ''\n      });\n    };\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value,\n        emailError: event.target.value === ''\n      });\n    };\n\n    _this.handleValidateEmailChange = function (event) {\n      _this.setState({\n        validateEmail: event.target.value,\n        confirmationEmailError: event.target.value === ''\n      });\n    };\n\n    _this.handlePhoneChange = function (event) {\n      _this.setState({\n        phone: event.target.value,\n        phoneError: event.target.value === ''\n      });\n    };\n\n    _this.handleZipChange = function (event) {\n      _this.setState({\n        zip: event.target.value,\n        zipError: event.target.value === ''\n      });\n    };\n\n    _this.validateFirstName = function () {\n      var firstName = _this.state.firstName;\n\n      _this.setState({\n        firstNameError: firstName.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.validateLastName = function () {\n      _this.setState({\n        lastNameError: _this.lastName === ''\n      }); // if (this.state.lastNameError) {\n      //   alert('Last name can\\'t be empty')\n      // }\n\n    };\n\n    _this.validateEmail = function () {\n      var email = _this.state.email;\n\n      _this.setState({\n        emailError: email.length > 0 ? null : 'Email must not be empty'\n      });\n    };\n\n    _this.validateValidateEmail = function () {\n      var _this$state = _this.state,\n          validateEmail = _this$state.validateEmail,\n          email = _this$state.email;\n\n      _this.setState({\n        validateEmailError: validateEmail.length > 0 && validateEmail == email ? null : 'Validate email must not be empty'\n      });\n    };\n\n    _this.validatePhone = function () {\n      var phone = _this.state.phone;\n\n      _this.setState({\n        phoneError: phone.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.validateZip = function () {\n      var zip = _this.state.zip;\n\n      _this.setState({\n        zipError: zip.length > 0 ? null : 'First name must not be empty'\n      });\n    };\n\n    _this.invalidSubmission = function () {};\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state2 = _this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          email = _this$state2.email,\n          validateEmail = _this$state2.validateEmail,\n          phone = _this$state2.phone,\n          zip = _this$state2.zip,\n          firstNameError = _this$state2.firstNameError,\n          lastNameError = _this$state2.lastNameError,\n          emailError = _this$state2.emailError,\n          confirmationEmailError = _this$state2.confirmationEmailError,\n          validateEmailError = _this$state2.validateEmailError,\n          phoneError = _this$state2.phoneError,\n          zipError = _this$state2.zipError;\n      var phoneClean = phone !== '' ? phone.match(/\\d+/g).map(Number).join('') : ''; // this.lastNameError = lastName === '';\n      // this.validateLastName();\n      // alert(this.state.lastNameError);\n\n      var data = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phone: phone,\n        phoneClean: phoneClean,\n        zip: zip // Axios.post('http://localhost:5000/serverport/add', data);\n        // reset the state to empty\n        // this.setState(this.resetState);\n        // this.setState({lastName: '', lastNameError: true})\n        // if (this.lastName === '') {\n        //   alert ('last name cant be empty')\n        // }\n\n      };\n      alert(\"Your state values: \\n \\n      firstName: \".concat(firstName, \" \\n \\n      lastName: \").concat(lastName, \" \\n \\n      email: \").concat(email, \" \\n \\n      validateEmail: \").concat(validateEmail, \" \\n \\n      phone: \").concat(phone, \" \\n \\n      phoneClean: \").concat(phoneClean, \" \\n\\n      zip: \").concat(zip, \" \\n\\n    \"));\n      alert(\"      \\n      firstNameError: \".concat(firstNameError, \" \\n\\n      lastNameError: \").concat(lastNameError, \" \\n\\n      emailError: \").concat(emailError, \" \\n\\n      confirmationEmailError: \").concat(confirmationEmailError, \" \\n\\n      validateEmailError: \").concat(validateEmailError, \" \\n\\n      phoneError: \").concat(phoneError, \" \\n\\n      zipError: \").concat(zipError, \"\\n    \"));\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      validateEmail: '',\n      phone: '',\n      zip: '',\n      firstNameError: true,\n      lastNameError: true,\n      emailError: true,\n      confirmationEmailError: true,\n      validateEmailError: true,\n      phoneError: true,\n      zipError: true\n    };\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var isValidFirstName = this.state.firstName.length > 0;\n      var isValidLastName = this.state.lastName.length > 0;\n      var isValidEmail = this.state.email.length > 0;\n      var isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail;\n      var isValidPhone = this.state.phone.length > 0;\n      var isValidZip = this.state.zip.length > 0;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Register for the CPR Registry\"), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"firstName\",\n        placeholder: \"First Name\",\n        value: this.state.firstName,\n        onChange: this.handleFirstNameChange // className={`form-control ${ isValidFirstName? '':'is-invalid' }`}\n        // onBlur={this.validateFirstName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"lastName\",\n        placeholder: \"Last Name\",\n        value: this.state.lastName,\n        onChange: this.handleLastNameChange // className={`form-control ${ isValidLastName? '':'is-invalid' }`}\n        // onBlur={this.validateLastName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        // className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        // className = 'input-group'\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.email,\n        onChange: this.handleEmailChange // onBlur={this.validateEmailName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmailConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Confirm email address\"), React.createElement(Form.Control, {\n        // className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        // className = 'input-group'\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.validateEmail,\n        onChange: this.handleValidateEmailChange // onBlur={this.validateValidateEmailName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicPhoneNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Form.Control, {\n        type: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: this.state.phone,\n        onChange: this.handlePhoneChange // className={`form-control ${ isValidPhone? '':'is-invalid' }`}\n        // onBlur={this.validatePhone} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicZipCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        type: \"zipCode\",\n        placeholder: \"Zip Code\",\n        value: this.state.zip,\n        onChange: this.handleZipChange,\n        onSubmit: alert('hello world'),\n        className: \"form-control \".concat(!this.state.zipError ? '' : 'is-invalid') // onBlur={this.validateZip} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["C:\\Users\\jbyrn\\Desktop\\Coding\\react-cpr-registry\\cpr-registry\\src\\containers\\Signup.js"],"names":["React","Component","Form","Button","Row","Col","Axios","Signup","props","resetState","setState","baseState","handleFirstNameChange","event","firstName","target","value","firstNameError","handleLastNameChange","lastName","lastNameError","handleEmailChange","email","emailError","handleValidateEmailChange","validateEmail","confirmationEmailError","handlePhoneChange","phone","phoneError","handleZipChange","zip","zipError","validateFirstName","state","length","validateLastName","validateValidateEmail","validateEmailError","validatePhone","validateZip","invalidSubmission","handleSubmit","preventDefault","phoneClean","match","map","Number","join","data","alert","isValidFirstName","isValidLastName","isValidEmail","isValidValidateEmail","isValidPhone","isValidZip"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport Axios from \"axios\";\r\n\r\nexport default class Signup extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      validateEmail:'',\r\n      phone:'',\r\n      zip:'',\r\n      firstNameError: true,\r\n      lastNameError: true,\r\n      emailError: true,\r\n      confirmationEmailError: true,\r\n      validateEmailError: true,\r\n      phoneError: true,\r\n      zipError: true\r\n    }\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState(this.baseState)\r\n  }\r\n\r\n  handleFirstNameChange = (event) => {\r\n    this.setState({firstName: event.target.value, firstNameError: event.target.value === ''});\r\n  }\r\n\r\n  handleLastNameChange = (event) => {\r\n    this.setState({lastName: event.target.value, lastNameError: event.target.value === ''});\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({email: event.target.value, emailError: event.target.value === ''});\r\n  }\r\n\r\n  handleValidateEmailChange = (event) => {\r\n    this.setState({validateEmail: event.target.value, confirmationEmailError: event.target.value === ''});\r\n  }\r\n\r\n  handlePhoneChange = (event) => {\r\n    this.setState({phone: event.target.value, phoneError: event.target.value === ''});\r\n  }\r\n\r\n  handleZipChange = (event) => {\r\n    this.setState({zip: event.target.value, zipError: event.target.value === ''});\r\n  }\r\n\r\n  validateFirstName = () => {\r\n    const { firstName } = this.state;\r\n    this.setState({\r\n      firstNameError:\r\n        firstName.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  validateLastName = () => {\r\n    this.setState({lastNameError: this.lastName === ''});\r\n    // if (this.state.lastNameError) {\r\n    //   alert('Last name can\\'t be empty')\r\n    // }\r\n  }\r\n  \r\n  validateEmail = () => {\r\n    const { email } = this.state;\r\n    this.setState({\r\n      emailError:\r\n        email.length > 0 ? null : 'Email must not be empty'\r\n    });\r\n  }\r\n\r\n  validateValidateEmail = () => {\r\n    const { validateEmail, email } = this.state;\r\n    this.setState({\r\n      validateEmailError:\r\n        (validateEmail.length > 0 && validateEmail == email) ? null : 'Validate email must not be empty'\r\n    });\r\n  }\r\n\r\n  validatePhone = () => {\r\n    const { phone } = this.state;\r\n    this.setState({\r\n      phoneError:\r\n        phone.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  validateZip = () => {\r\n    const { zip } = this.state;\r\n    this.setState({\r\n      zipError:\r\n        zip.length > 0 ? null : 'First name must not be empty'\r\n    });\r\n  }\r\n\r\n  invalidSubmission = () => {\r\n\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, validateEmail, phone, zip, firstNameError, lastNameError, emailError, confirmationEmailError, validateEmailError, phoneError, zipError } = this.state\r\n    let phoneClean = phone !== '' ? phone.match(/\\d+/g).map(Number).join('') : ''\r\n    // this.lastNameError = lastName === '';\r\n    // this.validateLastName();\r\n    // alert(this.state.lastNameError);\r\n\r\n    const data = {firstName: firstName, lastName: lastName, email: email, phone: phone, phoneClean: phoneClean, zip: zip}\r\n    // Axios.post('http://localhost:5000/serverport/add', data);\r\n    // reset the state to empty\r\n    // this.setState(this.resetState);\r\n    // this.setState({lastName: '', lastNameError: true})\r\n    // if (this.lastName === '') {\r\n    //   alert ('last name cant be empty')\r\n    // }\r\n    alert(`Your state values: \\n \r\n      firstName: ${firstName} \\n \r\n      lastName: ${lastName} \\n \r\n      email: ${email} \\n \r\n      validateEmail: ${validateEmail} \\n \r\n      phone: ${phone} \\n \r\n      phoneClean: ${phoneClean} \\n\r\n      zip: ${zip} \\n\r\n    `)\r\n    \r\n    alert(`      \r\n      firstNameError: ${firstNameError} \\n\r\n      lastNameError: ${lastNameError} \\n\r\n      emailError: ${emailError} \\n\r\n      confirmationEmailError: ${confirmationEmailError} \\n\r\n      validateEmailError: ${validateEmailError} \\n\r\n      phoneError: ${phoneError} \\n\r\n      zipError: ${zipError}\r\n    `)\r\n  } \r\n\r\n  render() {\r\n    const isValidFirstName = this.state.firstName.length > 0\r\n    const isValidLastName = this.state.lastName.length > 0\r\n    const isValidEmail = this.state.email.length > 0\r\n    const isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail\r\n    const isValidPhone = this.state.phone.length > 0\r\n    const isValidZip = this.state.zip.length > 0\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <p className=\"title\">\r\n          Register for the CPR Registry\r\n        </p>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"firstName\" \r\n                  placeholder=\"First Name\"  \r\n                  value={this.state.firstName} \r\n                  onChange={this.handleFirstNameChange}\r\n                  // className={`form-control ${ isValidFirstName? '':'is-invalid' }`}\r\n                  // onBlur={this.validateFirstName} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"lastName\" \r\n                  placeholder=\"Last Name\"  \r\n                  value={this.state.lastName} \r\n                  onChange={this.handleLastNameChange}\r\n                  // className={`form-control ${ isValidLastName? '':'is-invalid' }`}\r\n                  // onBlur={this.validateLastName} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Form.Group  controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control \r\n              // className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" \r\n              placeholder=\"Enter email\"  \r\n              value={this.state.email} \r\n              onChange={this.handleEmailChange}\r\n              // onBlur={this.validateEmailName} \r\n              />\r\n          </Form.Group>\r\n\r\n          <Form.Group  controlId=\"formBasicEmailConfirm\">\r\n            <Form.Label>Confirm email address</Form.Label>\r\n            <Form.Control \r\n              // className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" placeholder=\"Enter email\"  \r\n              value={this.state.validateEmail} \r\n              onChange={this.handleValidateEmailChange}\r\n              // onBlur={this.validateValidateEmailName} \r\n              />\r\n          </Form.Group>\r\n        </div>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicPhoneNumber\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control \r\n                  type=\"phoneNumber\" \r\n                  placeholder=\"Phone Number\"  \r\n                  value={this.state.phone} \r\n                  onChange={this.handlePhoneChange}\r\n                  // className={`form-control ${ isValidPhone? '':'is-invalid' }`}\r\n                  // onBlur={this.validatePhone} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicZipCode\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control \r\n                  type=\"zipCode\" \r\n                  placeholder=\"Zip Code\"  \r\n                  value={this.state.zip} \r\n                  onChange={this.handleZipChange}\r\n                  onSubmit={alert('hello world')}\r\n                  className={`form-control ${ !this.state.zipError ? '':'is-invalid' }`}\r\n                  // onBlur={this.validateZip} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Button variant=\"primary\" type=\"submit\" size=\"lg\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}