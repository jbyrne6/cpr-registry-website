{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Axios from \"axios\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.resetState = function () {\n      _this.setState(_this.baseState);\n    };\n\n    _this.handleFirstNameChange = function (event) {\n      _this.setState({\n        firstName: event.target.value,\n        firstNameError: event.target.value === ''\n      });\n    };\n\n    _this.handleLastNameChange = function (event) {\n      _this.setState({\n        lastName: event.target.value,\n        lastNameError: event.target.value === ''\n      });\n    };\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value,\n        emailError: event.target.value === ''\n      });\n    };\n\n    _this.handleValidateEmailChange = function (event) {\n      _this.setState({\n        validateEmail: event.target.value,\n        confirmationEmailError: event.target.value === ''\n      });\n    };\n\n    _this.handlePhoneChange = function (event) {\n      _this.setState({\n        phone: event.target.value,\n        phoneError: event.target.value === ''\n      });\n    };\n\n    _this.handleZipChange = function (event) {\n      _this.setState({\n        zip: event.target.value,\n        zipError: event.target.value === ''\n      });\n    };\n\n    _this.cleanUpPhone = function (phoneNumber) {\n      var phoneClean = phoneNumber !== '' ? phoneNumber.match(/\\d+/g).map(Number).join('') : '';\n      return phoneClean;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          validateEmail = _this$state.validateEmail,\n          phone = _this$state.phone,\n          zip = _this$state.zip,\n          firstNameError = _this$state.firstNameError,\n          lastNameError = _this$state.lastNameError,\n          emailError = _this$state.emailError,\n          confirmationEmailError = _this$state.confirmationEmailError,\n          validateEmailError = _this$state.validateEmailError,\n          phoneError = _this$state.phoneError,\n          zipError = _this$state.zipError;\n\n      if (/\\d/.test(phone)) {\n        _this.setState({\n          phoneClean: _this.cleanUpPhone(phone)\n        });\n      }\n\n      var data = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phone: phone,\n        phoneClean: _this.state.phoneClean,\n        zip: zip // Axios.post('http://localhost:5000/serverport/add', data);\n        // reset the state to empty\n        // this.setState(this.resetState);\n        // this.setState({lastName: '', lastNameError: true})\n        // if (this.lastName === '') {\n        //   alert ('last name cant be empty')\n        // }\n\n      };\n      alert(\"Your state values: \\n \\n      firstName: \".concat(firstName, \" \\n \\n      lastName: \").concat(lastName, \" \\n \\n      email: \").concat(email, \" \\n \\n      validateEmail: \").concat(validateEmail, \" \\n \\n      phone: \").concat(phone, \" \\n \\n      phoneClean: \").concat(_this.state.phoneClean, \" \\n\\n      zip: \").concat(zip, \" \\n\\n    \"));\n      alert(\"      \\n      firstNameError: \".concat(firstNameError, \" \\n\\n      lastNameError: \").concat(lastNameError, \" \\n\\n      emailError: \").concat(emailError, \" \\n\\n      confirmationEmailError: \").concat(confirmationEmailError, \" \\n\\n      validateEmailError: \").concat(validateEmailError, \" \\n\\n      phoneError: \").concat(phoneError, \" \\n\\n      zipError: \").concat(zipError, \"\\n    \"));\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      validateEmail: '',\n      phone: '',\n      phoneClean: '',\n      zip: '',\n      firstNameError: true,\n      lastNameError: true,\n      emailError: true,\n      confirmationEmailError: true,\n      validateEmailError: true,\n      phoneError: true,\n      zipError: true\n    };\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Register for the CPR Registry\"), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"firstName\",\n        placeholder: \"First Name\",\n        value: this.state.firstName,\n        onChange: this.handleFirstNameChange,\n        className: \"form-control \".concat(!this.state.firstNameError ? '' : 'is-invalid') // onBlur={this.validateFirstName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"lastName\",\n        placeholder: \"Last Name\",\n        value: this.state.lastName,\n        onChange: this.handleLastNameChange,\n        className: \"form-control \".concat(!this.state.lastNameError ? '' : 'is-invalid') // onBlur={this.validateLastName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        className: [\"form-control \".concat(!this.state.emailError ? '' : 'is-invalid'), 'input-group'].join(' ') // className = 'input-group'\n        ,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.email,\n        onChange: this.handleEmailChange // onBlur={this.validateEmailName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmailConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Confirm email address\"), React.createElement(Form.Control, {\n        className: [\"form-control \".concat(!this.state.confirmationEmailError ? '' : 'is-invalid'), 'input-group'].join(' ') // className = 'input-group'\n        ,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.validateEmail,\n        onChange: this.handleValidateEmailChange // onBlur={this.validateValidateEmailName} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicPhoneNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Form.Control, {\n        type: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: this.state.phone,\n        onChange: this.handlePhoneChange,\n        className: \"form-control \".concat(!this.state.phoneError ? '' : 'is-invalid') // onBlur={this.validatePhone} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicZipCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        type: \"zipCode\",\n        placeholder: \"Zip Code\",\n        value: this.state.zip,\n        onChange: this.handleZipChange,\n        className: \"form-control \".concat(!this.state.zipError ? '' : 'is-invalid') // onBlur={this.validateZip} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["C:\\Users\\jbyrn\\Desktop\\Coding\\react-cpr-registry\\cpr-registry\\src\\containers\\Signup.js"],"names":["React","Component","Form","Button","Row","Col","Axios","Signup","props","resetState","setState","baseState","handleFirstNameChange","event","firstName","target","value","firstNameError","handleLastNameChange","lastName","lastNameError","handleEmailChange","email","emailError","handleValidateEmailChange","validateEmail","confirmationEmailError","handlePhoneChange","phone","phoneError","handleZipChange","zip","zipError","cleanUpPhone","phoneNumber","phoneClean","match","map","Number","join","handleSubmit","preventDefault","state","validateEmailError","test","data","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport Axios from \"axios\";\r\n\r\nexport default class Signup extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      validateEmail:'',\r\n      phone:'',\r\n      phoneClean:'',\r\n      zip:'',\r\n      firstNameError: true,\r\n      lastNameError: true,\r\n      emailError: true,\r\n      confirmationEmailError: true,\r\n      validateEmailError: true,\r\n      phoneError: true,\r\n      zipError: true\r\n    }\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState(this.baseState)\r\n  }\r\n\r\n  handleFirstNameChange = (event) => {\r\n    this.setState({firstName: event.target.value, firstNameError: event.target.value === ''});\r\n  }\r\n\r\n  handleLastNameChange = (event) => {\r\n    this.setState({lastName: event.target.value, lastNameError: event.target.value === ''});\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({email: event.target.value, emailError: event.target.value === ''});\r\n  }\r\n\r\n  handleValidateEmailChange = (event) => {\r\n    this.setState({validateEmail: event.target.value, confirmationEmailError: event.target.value === ''});\r\n  }\r\n\r\n  handlePhoneChange = (event) => {\r\n    this.setState({phone: event.target.value, phoneError: event.target.value === ''});\r\n  }\r\n\r\n  handleZipChange = (event) => {\r\n    this.setState({zip: event.target.value, zipError: event.target.value === ''});\r\n  }\r\n\r\n  cleanUpPhone = (phoneNumber) => {\r\n    let phoneClean = phoneNumber !== '' ? phoneNumber.match(/\\d+/g).map(Number).join('') : ''\r\n    return phoneClean\r\n  }\r\n\r\n  // validateFirstName = () => {\r\n  //   const { firstName } = this.state;\r\n  //   this.setState({\r\n  //     firstNameError:\r\n  //       firstName.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateLastName = () => {\r\n  //   this.setState({lastNameError: this.lastName === ''});\r\n  //   // if (this.state.lastNameError) {\r\n  //   //   alert('Last name can\\'t be empty')\r\n  //   // }\r\n  // }\r\n  \r\n  // validateEmail = () => {\r\n  //   const { email } = this.state;\r\n  //   this.setState({\r\n  //     emailError:\r\n  //       email.length > 0 ? null : 'Email must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateValidateEmail = () => {\r\n  //   const { validateEmail, email } = this.state;\r\n  //   this.setState({\r\n  //     validateEmailError:\r\n  //       (validateEmail.length > 0 && validateEmail == email) ? null : 'Validate email must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validatePhone = () => {\r\n  //   const { phone } = this.state;\r\n  //   this.setState({\r\n  //     phoneError:\r\n  //       phone.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateZip = () => {\r\n  //   const { zip } = this.state;\r\n  //   this.setState({\r\n  //     zipError:\r\n  //       zip.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // invalidSubmission = () => {\r\n\r\n  // }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, validateEmail, phone, zip, firstNameError, lastNameError, emailError, confirmationEmailError, validateEmailError, phoneError, zipError } = this.state\r\n    if (/\\d/.test(phone)) {\r\n      this.setState({phoneClean: this.cleanUpPhone(phone)})\r\n    }\r\n    const data = {firstName: firstName, lastName: lastName, email: email, phone: phone, phoneClean: this.state.phoneClean, zip: zip}\r\n    // Axios.post('http://localhost:5000/serverport/add', data);\r\n    // reset the state to empty\r\n    // this.setState(this.resetState);\r\n    // this.setState({lastName: '', lastNameError: true})\r\n    // if (this.lastName === '') {\r\n    //   alert ('last name cant be empty')\r\n    // }\r\n    alert(`Your state values: \\n \r\n      firstName: ${firstName} \\n \r\n      lastName: ${lastName} \\n \r\n      email: ${email} \\n \r\n      validateEmail: ${validateEmail} \\n \r\n      phone: ${phone} \\n \r\n      phoneClean: ${this.state.phoneClean} \\n\r\n      zip: ${zip} \\n\r\n    `)\r\n    \r\n    alert(`      \r\n      firstNameError: ${firstNameError} \\n\r\n      lastNameError: ${lastNameError} \\n\r\n      emailError: ${emailError} \\n\r\n      confirmationEmailError: ${confirmationEmailError} \\n\r\n      validateEmailError: ${validateEmailError} \\n\r\n      phoneError: ${phoneError} \\n\r\n      zipError: ${zipError}\r\n    `)\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <p className=\"title\">\r\n          Register for the CPR Registry\r\n        </p>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"firstName\" \r\n                  placeholder=\"First Name\"  \r\n                  value={this.state.firstName} \r\n                  onChange={this.handleFirstNameChange}\r\n                  className={`form-control ${ !this.state.firstNameError ? '':'is-invalid' }`}\r\n                  // onBlur={this.validateFirstName} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"lastName\" \r\n                  placeholder=\"Last Name\"  \r\n                  value={this.state.lastName} \r\n                  onChange={this.handleLastNameChange}\r\n                  className={`form-control ${ !this.state.lastNameError ? '':'is-invalid' }`}\r\n                  // onBlur={this.validateLastName} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Form.Group  controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control \r\n              className = {[`form-control ${ !this.state.emailError ? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" \r\n              placeholder=\"Enter email\"  \r\n              value={this.state.email} \r\n              onChange={this.handleEmailChange}\r\n              // onBlur={this.validateEmailName} \r\n              />\r\n          </Form.Group>\r\n\r\n          <Form.Group  controlId=\"formBasicEmailConfirm\">\r\n            <Form.Label>Confirm email address</Form.Label>\r\n            <Form.Control \r\n              className = {[`form-control ${ !this.state.confirmationEmailError ? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n              // className = 'input-group'\r\n              type=\"email\" placeholder=\"Enter email\"  \r\n              value={this.state.validateEmail} \r\n              onChange={this.handleValidateEmailChange}\r\n              // onBlur={this.validateValidateEmailName} \r\n              />\r\n          </Form.Group>\r\n        </div>\r\n        {/* <div className = \"input-group\"> */}\r\n        <div className = \"middle-column\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicPhoneNumber\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control \r\n                  type=\"phoneNumber\" \r\n                  placeholder=\"Phone Number\"  \r\n                  value={this.state.phone} \r\n                  onChange={this.handlePhoneChange}\r\n                  className={`form-control ${ !this.state.phoneError ? '':'is-invalid' }`}\r\n                  // onBlur={this.validatePhone} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicZipCode\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control \r\n                  type=\"zipCode\" \r\n                  placeholder=\"Zip Code\"  \r\n                  value={this.state.zip} \r\n                  onChange={this.handleZipChange}\r\n                  className={`form-control ${ !this.state.zipError ? '':'is-invalid' }`}\r\n                  // onBlur={this.validateZip} \r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className = \"middle-column\">\r\n          <Button variant=\"primary\" type=\"submit\" size=\"lg\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}