{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jbyrn\\\\Desktop\\\\Coding\\\\react-cpr-registry\\\\cpr-registry\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.handleFirstNameChange = function (event) {\n      _this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    _this.handleLastNameChange = function (event) {\n      _this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.handleValidateEmailChange = function (event) {\n      _this.setState({\n        validateEmail: event.target.value\n      });\n    };\n\n    _this.handlePhoneChange = function (event) {\n      _this.setState({\n        phone: event.target.value\n      });\n    };\n\n    _this.handleZipChange = function (event) {\n      _this.setState({\n        zip: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          validateEmail = _this$state.validateEmail,\n          phone = _this$state.phone,\n          zip = _this$state.zip;\n      alert(\"Your state values: \\n \\n            firstName: \".concat(firstName, \" \\n \\n            lastName: \").concat(lastName, \" \\n \\n            email: \").concat(email, \" \\n \\n            validateEmail: \").concat(validateEmail, \" \\n \\n            phone: \").concat(phone, \" \\n \\n            zip: \").concat(zip));\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      validateEmail: '',\n      phone: '',\n      zip: '',\n      firstNameError: '',\n      lastNameError: '',\n      emailError: '',\n      validateEmailError: '',\n      phoneError: '',\n      zipError: ''\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var isValidFirstName = this.state.firstName.length > 0;\n      var isValidLastName = this.state.lastName.length > 0;\n      var isValidEmail = this.state.email.length > 0;\n      var isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail;\n      var isValidPhone = this.state.phone.length > 0;\n      var isValidZip = this.state.zip.length > 0;\n      return React.createElement(Form, {\n        className: \"middle-column\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasicFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"firstName\",\n        placeholder: \"First Name\",\n        value: this.state.firstName,\n        onChange: this.handleFirstNameChange //className={`form-control ${ isValidFirstName? '':'is-valid' }`}\n        ,\n        onBlur: this.validateFirstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlID: \"formBasiclastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"lastName\",\n        placeholder: \"Last Name\",\n        value: this.state.lastName,\n        onChange: this.handleLastNameChange //className={`form-control ${ isValidLastName? '':'is-invalid' }`}\n        ,\n        onBlur: this.validateLastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))))), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        //className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        className: \"input-group\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.email,\n        onChange: this.handleEmailChange,\n        onBlur: this.validateEmailName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmailConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Confirm email address\"), React.createElement(Form.Control, {\n        //className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \n        className: \"input-group\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.state.validateEmail,\n        onChange: this.handleValidateEmailChange,\n        onBlur: this.validateValidateEmailName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicPhoneNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(Form.Control, {\n        type: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: this.state.phone,\n        onChange: this.handlePhoneChange //className={`form-control ${ isValidPhone? '':'is-invalid' }`}\n        ,\n        onBlur: this.validatePhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicZipCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Zip Code\"), React.createElement(Form.Control, {\n        type: \"zipCode\",\n        placeholder: \"Zip Code\",\n        value: this.state.zip,\n        onChange: this.handleZipChange,\n        className: \"form-control \".concat(isValidZip ? '' : 'is-invalid'),\n        onBlur: this.validateZip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["C:\\Users\\jbyrn\\Desktop\\Coding\\react-cpr-registry\\cpr-registry\\src\\containers\\Signup.js"],"names":["React","Component","Form","Button","Row","Col","Signup","props","handleFirstNameChange","event","setState","firstName","target","value","handleLastNameChange","lastName","handleEmailChange","email","handleValidateEmailChange","validateEmail","handlePhoneChange","phone","handleZipChange","zip","handleSubmit","preventDefault","state","alert","firstNameError","lastNameError","emailError","validateEmailError","phoneError","zipError","isValidFirstName","length","isValidLastName","isValidEmail","isValidValidateEmail","isValidPhone","isValidZip","validateFirstName","validateLastName","validateEmailName","validateValidateEmailName","validatePhone","validateZip"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class Signup extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      validateEmail:'',\r\n      phone:'',\r\n      zip:'',\r\n      firstNameError:'',\r\n      lastNameError:'',\r\n      emailError:'',\r\n      validateEmailError:'',\r\n      phoneError:'',\r\n      zipError:''\r\n    }\r\n  }\r\n\r\n  handleFirstNameChange = (event) => {\r\n    this.setState({firstName: event.target.value});\r\n  }\r\n\r\n  handleLastNameChange = (event) => {\r\n    this.setState({lastName: event.target.value});\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({email: event.target.value});\r\n  }\r\n\r\n  handleValidateEmailChange = (event) => {\r\n    this.setState({validateEmail: event.target.value});\r\n  }\r\n\r\n  handlePhoneChange = (event) => {\r\n    this.setState({phone: event.target.value});\r\n  }\r\n\r\n  handleZipChange = (event) => {\r\n    this.setState({zip: event.target.value});\r\n  }\r\n\r\n  // validateFirstName = () => {\r\n  //   const { firstName } = this.state;\r\n  //   this.setState({\r\n  //     firstNameError:\r\n  //       firstName.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateLastName = () => {\r\n  //   const { lastName } = this.state;\r\n  //   this.setState({\r\n  //     lastNameError:\r\n  //       lastName.length > 0 ? null : 'Last name must not be empty'\r\n  //   });\r\n  // }\r\n  \r\n  // validateEmail = () => {\r\n  //   const { email } = this.state;\r\n  //   this.setState({\r\n  //     emailError:\r\n  //       email.length > 0 ? null : 'Email must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateValidateEmail = () => {\r\n  //   const { validateEmail, email } = this.state;\r\n  //   this.setState({\r\n  //     validateEmailError:\r\n  //       (validateEmail.length > 0 && validateEmail == email) ? null : 'Validate email must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validatePhone = () => {\r\n  //   const { phone } = this.state;\r\n  //   this.setState({\r\n  //     phoneError:\r\n  //       phone.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  // validateZip = () => {\r\n  //   const { zip } = this.state;\r\n  //   this.setState({\r\n  //     zipError:\r\n  //       zip.length > 0 ? null : 'First name must not be empty'\r\n  //   });\r\n  // }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, validateEmail, phone, zip } = this.state\r\n    alert(`Your state values: \\n \r\n            firstName: ${firstName} \\n \r\n            lastName: ${lastName} \\n \r\n            email: ${email} \\n \r\n            validateEmail: ${validateEmail} \\n \r\n            phone: ${phone} \\n \r\n            zip: ${zip}`)\r\n  } \r\n\r\n  render() {\r\n    const isValidFirstName = this.state.firstName.length > 0\r\n    const isValidLastName = this.state.lastName.length > 0\r\n    const isValidEmail = this.state.email.length > 0\r\n    const isValidValidateEmail = this.state.email.length > 0 && this.state.email == this.state.validateEmail\r\n    const isValidPhone = this.state.phone.length > 0\r\n    const isValidZip = this.state.zip.length > 0\r\n    return (\r\n      <Form className = \"middle-column\" onSubmit={this.handleSubmit}>\r\n        <div className = \"input-group\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasicFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"firstName\" \r\n                  placeholder=\"First Name\"  \r\n                  value={this.state.firstName} \r\n                  onChange={this.handleFirstNameChange}\r\n                  //className={`form-control ${ isValidFirstName? '':'is-valid' }`}\r\n                  onBlur={this.validateFirstName} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlID=\"formBasiclastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"lastName\" \r\n                  placeholder=\"Last Name\"  \r\n                  value={this.state.lastName} \r\n                  onChange={this.handleLastNameChange}\r\n                  //className={`form-control ${ isValidLastName? '':'is-invalid' }`}\r\n                  onBlur={this.validateLastName} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <Form.Group  controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control \r\n            //className = {[`form-control ${ isValidEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n            className = 'input-group'\r\n            type=\"email\" \r\n            placeholder=\"Enter email\"  \r\n            value={this.state.email} \r\n            onChange={this.handleEmailChange}\r\n            onBlur={this.validateEmailName} />\r\n        </Form.Group>\r\n\r\n        <Form.Group  controlId=\"formBasicEmailConfirm\">\r\n          <Form.Label>Confirm email address</Form.Label>\r\n          <Form.Control \r\n            //className = {[`form-control ${ isValidValidateEmail? '':'is-invalid' }`, 'input-group'].join(' ')} \r\n            className = 'input-group'\r\n            type=\"email\" placeholder=\"Enter email\"  \r\n            value={this.state.validateEmail} \r\n            onChange={this.handleValidateEmailChange}\r\n            onBlur={this.validateValidateEmailName} />\r\n        </Form.Group>\r\n\r\n        <div className = \"input-group\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicPhoneNumber\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control \r\n                  type=\"phoneNumber\" \r\n                  placeholder=\"Phone Number\"  \r\n                  value={this.state.phone} \r\n                  onChange={this.handlePhoneChange}\r\n                  //className={`form-control ${ isValidPhone? '':'is-invalid' }`}\r\n                  onBlur={this.validatePhone} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formBasicZipCode\">\r\n                <Form.Label>Zip Code</Form.Label>\r\n                <Form.Control \r\n                  type=\"zipCode\" \r\n                  placeholder=\"Zip Code\"  \r\n                  value={this.state.zip} \r\n                  onChange={this.handleZipChange}\r\n                  className={`form-control ${ isValidZip? '':'is-invalid' }`}\r\n                  onBlur={this.validateZip} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      \r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}